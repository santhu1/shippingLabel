{"ast":null,"code":"import _objectSpread from \"/Users/santhosh/shipping-label/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/santhosh/shipping-label/src/core/components/wizard/Wizard.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Navigation from \"../N\";\nimport ProgressBar from \"../ProgressBar\";\nimport { stepMapping } from \"../constants\";\nimport { validatorObj } from \"../utils\";\nexport default class Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPreviousBtn: false,\n      showNextBtn: true,\n      showConfirm: false,\n      compState: 1,\n      //our starting step\n      showNavigation: true,\n      wizardContext: this.props.wizardContext,\n      errorObj: {}\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.handleState = this.handleState.bind(this);\n    this.handleNested = this.handleNested.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  checkNavState(next) {\n    if (next < 2) {\n      this.setState({\n        showPreviousBtn: false\n      });\n    }\n  }\n  /* We call this function as a middleware to see what appropriate function to invoke */\n\n\n  handleFilter(event) {\n    const typeOfComponenent = event.target.getAttribute(\"data-step\");\n\n    if (typeOfComponenent === stepMapping.from || typeOfComponenent === stepMapping.to) {\n      this.handleNested(event);\n    } else if (typeOfComponenent === stepMapping.confirm) {\n      this.props.onComplete(this.state.wizardContext);\n    } else if (typeOfComponenent === stepMapping.weight || typeOfComponenent === stepMapping.shipping) {\n      //weight and shipping steps\n      this.handleState(event);\n    }\n  }\n\n  handleState(event) {\n    const key = event.target.getAttribute(\"data-id\"),\n          value = event.target.value;\n    this.setState({\n      wizardContext: _objectSpread({}, this.state.wizardContext, {\n        [key]: value\n      })\n    });\n  }\n\n  handleNested(event) {\n    const key = event.target.getAttribute(\"data-id\"),\n          stage = event.target.getAttribute(\"data-step\"),\n          value = event.target.value;\n    this.setState(prevState => _objectSpread({}, prevState, {\n      wizardContext: _objectSpread({}, prevState.wizardContext, {\n        [stage]: _objectSpread({}, prevState.wizardContext[stage], {\n          [key]: value\n        })\n      })\n    }));\n  }\n\n  next() {\n    const wizardContext = this.state.wizardContext;\n    this.setState({\n      errorObj: {}\n    });\n    /* validation of form for each step */\n\n    const currentComponentStep = Object.keys(validatorObj)[this.state.compState - 1];\n\n    if (validatorObj[currentComponentStep]) {\n      const errors = validatorObj[currentComponentStep](wizardContext[currentComponentStep]);\n\n      if (Object.keys(errors).length) {\n        this.setState({\n          errorObj: errors\n        });\n        return false;\n      }\n    }\n\n    this.setState((prevState, props) => {\n      return {\n        compState: prevState.compState + 1,\n        showPreviousBtn: true,\n        showNextBtn: prevState.compState + 1 === props.steps.length ? false : true\n      };\n    });\n  }\n\n  previous() {\n    this.setState({\n      errorObj: {}\n    });\n\n    if (this.state.compState > 1) {\n      this.setState({\n        compState: this.state.compState - 1,\n        showNextBtn: true\n      });\n    }\n\n    this.checkNavState(this.state.compState - 1);\n  }\n\n  render() {\n    const Header = this.props.header;\n    const ActiveComponent = this.props.steps[this.state.compState - 1];\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(ProgressBar, {\n      step: this.state.compState,\n      length: this.props.steps.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(ActiveComponent, {\n      onAction: this.handleFilter,\n      wizardContext: this.state.wizardContext,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      showPrev: this.state.showPreviousBtn,\n      showNext: this.state.showNextBtn,\n      next: this.next,\n      prev: this.previous,\n      show: this.state.showNavigation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), Object.keys(this.state.errorObj).map((key, index) => {\n      const error = key === \"state\" ? \"You need two letters for state\" : \"You have \" + key + \" error\";\n      return React.createElement(\"p\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \" \", error, \" \");\n    }));\n  }\n\n}\nWizard.propTypes = {\n  header: PropTypes.func.isRequired,\n  steps: PropTypes.array.isRequired,\n  wizardContext: PropTypes.object.isRequired,\n  onComplete: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/santhosh/shipping-label/src/core/components/wizard/Wizard.js"],"names":["React","PropTypes","Navigation","ProgressBar","stepMapping","validatorObj","Wizard","Component","constructor","props","state","showPreviousBtn","showNextBtn","showConfirm","compState","showNavigation","wizardContext","errorObj","next","bind","previous","handleState","handleNested","handleFilter","checkNavState","setState","event","typeOfComponenent","target","getAttribute","from","to","confirm","onComplete","weight","shipping","key","value","stage","prevState","currentComponentStep","Object","keys","errors","length","steps","render","Header","header","ActiveComponent","map","index","error","propTypes","func","isRequired","array","object"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,MAAvB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,YAAT,QAA6B,UAA7B;AAEA,eAAe,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,eAAe,EAAE,KADN;AAEXC,MAAAA,WAAW,EAAE,IAFF;AAGXC,MAAAA,WAAW,EAAE,KAHF;AAIXC,MAAAA,SAAS,EAAE,CAJA;AAIG;AACdC,MAAAA,cAAc,EAAE,IALL;AAMXC,MAAAA,aAAa,EAAE,KAAKP,KAAL,CAAWO,aANf;AAOXC,MAAAA,QAAQ,EAAE;AAPC,KAAb;AASA,SAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,YAAL,GAAoB,KAAKA,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDK,EAAAA,aAAa,CAACN,IAAD,EAAO;AAClB,QAAIA,IAAI,GAAG,CAAX,EAAc;AACZ,WAAKO,QAAL,CAAc;AACZd,QAAAA,eAAe,EAAE;AADL,OAAd;AAGD;AACF;AACD;;;AACAY,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,UAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,WAA1B,CAA1B;;AACA,QACEF,iBAAiB,KAAKvB,WAAW,CAAC0B,IAAlC,IACAH,iBAAiB,KAAKvB,WAAW,CAAC2B,EAFpC,EAGE;AACA,WAAKT,YAAL,CAAkBI,KAAlB;AACD,KALD,MAKO,IAAIC,iBAAiB,KAAKvB,WAAW,CAAC4B,OAAtC,EAA+C;AACpD,WAAKvB,KAAL,CAAWwB,UAAX,CAAsB,KAAKvB,KAAL,CAAWM,aAAjC;AACD,KAFM,MAEA,IACLW,iBAAiB,KAAKvB,WAAW,CAAC8B,MAAlC,IACAP,iBAAiB,KAAKvB,WAAW,CAAC+B,QAF7B,EAGL;AACA;AACA,WAAKd,WAAL,CAAiBK,KAAjB;AACD;AACF;;AAEDL,EAAAA,WAAW,CAACK,KAAD,EAAQ;AACjB,UAAMU,GAAG,GAAGV,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,SAA1B,CAAZ;AAAA,UACEQ,KAAK,GAAGX,KAAK,CAACE,MAAN,CAAaS,KADvB;AAEA,SAAKZ,QAAL,CAAc;AACZT,MAAAA,aAAa,oBAAO,KAAKN,KAAL,CAAWM,aAAlB;AAAiC,SAACoB,GAAD,GAAOC;AAAxC;AADD,KAAd;AAGD;;AAEDf,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAClB,UAAMU,GAAG,GAAGV,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,SAA1B,CAAZ;AAAA,UACES,KAAK,GAAGZ,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,WAA1B,CADV;AAAA,UAEEQ,KAAK,GAAGX,KAAK,CAACE,MAAN,CAAaS,KAFvB;AAGA,SAAKZ,QAAL,CAAcc,SAAS,sBAClBA,SADkB;AAErBvB,MAAAA,aAAa,oBACRuB,SAAS,CAACvB,aADF;AAEX,SAACsB,KAAD,qBACKC,SAAS,CAACvB,aAAV,CAAwBsB,KAAxB,CADL;AAEE,WAACF,GAAD,GAAOC;AAFT;AAFW;AAFQ,MAAvB;AAUD;;AAEDnB,EAAAA,IAAI,GAAG;AAAA,UACGF,aADH,GACqB,KAAKN,KAD1B,CACGM,aADH;AAEL,SAAKS,QAAL,CAAc;AACZR,MAAAA,QAAQ,EAAE;AADE,KAAd;AAGA;;AACA,UAAMuB,oBAAoB,GAAGC,MAAM,CAACC,IAAP,CAAYrC,YAAZ,EAC3B,KAAKK,KAAL,CAAWI,SAAX,GAAuB,CADI,CAA7B;;AAGA,QAAIT,YAAY,CAACmC,oBAAD,CAAhB,EAAwC;AACtC,YAAMG,MAAM,GAAGtC,YAAY,CAACmC,oBAAD,CAAZ,CACbxB,aAAa,CAACwB,oBAAD,CADA,CAAf;;AAGA,UAAIC,MAAM,CAACC,IAAP,CAAYC,MAAZ,EAAoBC,MAAxB,EAAgC;AAC9B,aAAKnB,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAE0B;AADE,SAAd;AAGA,eAAO,KAAP;AACD;AACF;;AACD,SAAKlB,QAAL,CAAc,CAACc,SAAD,EAAY9B,KAAZ,KAAsB;AAClC,aAAO;AACLK,QAAAA,SAAS,EAAEyB,SAAS,CAACzB,SAAV,GAAsB,CAD5B;AAELH,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,WAAW,EACT2B,SAAS,CAACzB,SAAV,GAAsB,CAAtB,KAA4BL,KAAK,CAACoC,KAAN,CAAYD,MAAxC,GAAiD,KAAjD,GAAyD;AAJtD,OAAP;AAMD,KAPD;AAQD;;AAEDxB,EAAAA,QAAQ,GAAG;AACT,SAAKK,QAAL,CAAc;AACZR,MAAAA,QAAQ,EAAE;AADE,KAAd;;AAGA,QAAI,KAAKP,KAAL,CAAWI,SAAX,GAAuB,CAA3B,EAA8B;AAC5B,WAAKW,QAAL,CAAc;AACZX,QAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SAAX,GAAuB,CADtB;AAEZF,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID;;AACD,SAAKY,aAAL,CAAmB,KAAKd,KAAL,CAAWI,SAAX,GAAuB,CAA1C;AACD;;AAEDgC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG,KAAKtC,KAAL,CAAWuC,MAA1B;AACA,UAAMC,eAAe,GAAG,KAAKxC,KAAL,CAAWoC,KAAX,CAAiB,KAAKnC,KAAL,CAAWI,SAAX,GAAuB,CAAxC,CAAxB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,SADnB;AAEE,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWoC,KAAX,CAAiBD,MAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAME,oBAAC,eAAD;AACE,MAAA,QAAQ,EAAE,KAAKrB,YADjB;AAEE,MAAA,aAAa,EAAE,KAAKb,KAAL,CAAWM,aAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAUE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,eADvB;AAEE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,WAFvB;AAGE,MAAA,IAAI,EAAE,KAAKM,IAHb;AAIE,MAAA,IAAI,EAAE,KAAKE,QAJb;AAKE,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWK,cALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAiBG0B,MAAM,CAACC,IAAP,CAAY,KAAKhC,KAAL,CAAWO,QAAvB,EAAiCiC,GAAjC,CAAqC,CAACd,GAAD,EAAMe,KAAN,KAAgB;AACpD,YAAMC,KAAK,GACThB,GAAG,KAAK,OAAR,GACI,gCADJ,GAEI,cAAcA,GAAd,GAAoB,QAH1B;AAIA,aAAO;AAAG,QAAA,GAAG,EAAEe,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAiBC,KAAjB,MAAP;AACD,KANA,CAjBH,CADF;AA2BD;;AA9IiD;AAiJpD9C,MAAM,CAAC+C,SAAP,GAAmB;AACjBL,EAAAA,MAAM,EAAE/C,SAAS,CAACqD,IAAV,CAAeC,UADN;AAEjBV,EAAAA,KAAK,EAAE5C,SAAS,CAACuD,KAAV,CAAgBD,UAFN;AAGjBvC,EAAAA,aAAa,EAAEf,SAAS,CAACwD,MAAV,CAAiBF,UAHf;AAIjBtB,EAAAA,UAAU,EAAEhC,SAAS,CAACqD,IAAV,CAAeC;AAJV,CAAnB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Navigation from \"../N\";\nimport ProgressBar from \"../ProgressBar\";\nimport { stepMapping } from \"../constants\";\nimport { validatorObj } from \"../utils\";\n\nexport default class Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showPreviousBtn: false,\n      showNextBtn: true,\n      showConfirm: false,\n      compState: 1, //our starting step\n      showNavigation: true,\n      wizardContext: this.props.wizardContext,\n      errorObj: {}\n    };\n    this.next = this.next.bind(this);\n    this.previous = this.previous.bind(this);\n    this.handleState = this.handleState.bind(this);\n    this.handleNested = this.handleNested.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  checkNavState(next) {\n    if (next < 2) {\n      this.setState({\n        showPreviousBtn: false\n      });\n    }\n  }\n  /* We call this function as a middleware to see what appropriate function to invoke */\n  handleFilter(event) {\n    const typeOfComponenent = event.target.getAttribute(\"data-step\");\n    if (\n      typeOfComponenent === stepMapping.from ||\n      typeOfComponenent === stepMapping.to\n    ) {\n      this.handleNested(event);\n    } else if (typeOfComponenent === stepMapping.confirm) {\n      this.props.onComplete(this.state.wizardContext);\n    } else if (\n      typeOfComponenent === stepMapping.weight ||\n      typeOfComponenent === stepMapping.shipping\n    ) {\n      //weight and shipping steps\n      this.handleState(event);\n    }\n  }\n\n  handleState(event) {\n    const key = event.target.getAttribute(\"data-id\"),\n      value = event.target.value;\n    this.setState({\n      wizardContext: { ...this.state.wizardContext, [key]: value }\n    });\n  }\n\n  handleNested(event) {\n    const key = event.target.getAttribute(\"data-id\"),\n      stage = event.target.getAttribute(\"data-step\"),\n      value = event.target.value;\n    this.setState(prevState => ({\n      ...prevState,\n      wizardContext: {\n        ...prevState.wizardContext,\n        [stage]: {\n          ...prevState.wizardContext[stage],\n          [key]: value\n        }\n      }\n    }));\n  }\n\n  next() {\n    const { wizardContext } = this.state;\n    this.setState({\n      errorObj: {}\n    });\n    /* validation of form for each step */\n    const currentComponentStep = Object.keys(validatorObj)[\n      this.state.compState - 1\n    ];\n    if (validatorObj[currentComponentStep]) {\n      const errors = validatorObj[currentComponentStep](\n        wizardContext[currentComponentStep]\n      );\n      if (Object.keys(errors).length) {\n        this.setState({\n          errorObj: errors\n        });\n        return false;\n      }\n    }\n    this.setState((prevState, props) => {\n      return {\n        compState: prevState.compState + 1,\n        showPreviousBtn: true,\n        showNextBtn:\n          prevState.compState + 1 === props.steps.length ? false : true\n      };\n    });\n  }\n\n  previous() {\n    this.setState({\n      errorObj: {}\n    });\n    if (this.state.compState > 1) {\n      this.setState({\n        compState: this.state.compState - 1,\n        showNextBtn: true\n      });\n    }\n    this.checkNavState(this.state.compState - 1);\n  }\n\n  render() {\n    const Header = this.props.header;\n    const ActiveComponent = this.props.steps[this.state.compState - 1];\n    return (\n      <div className=\"container\">\n        <Header />\n        <ProgressBar\n          step={this.state.compState}\n          length={this.props.steps.length}\n        />\n        <ActiveComponent\n          onAction={this.handleFilter}\n          wizardContext={this.state.wizardContext}\n        />\n        <Navigation\n          showPrev={this.state.showPreviousBtn}\n          showNext={this.state.showNextBtn}\n          next={this.next}\n          prev={this.previous}\n          show={this.state.showNavigation}\n        />\n        {Object.keys(this.state.errorObj).map((key, index) => {\n          const error =\n            key === \"state\"\n              ? \"You need two letters for state\"\n              : \"You have \" + key + \" error\";\n          return <p key={index}> {error} </p>;\n        })}\n      </div>\n    );\n  }\n}\n\nWizard.propTypes = {\n  header: PropTypes.func.isRequired,\n  steps: PropTypes.array.isRequired,\n  wizardContext: PropTypes.object.isRequired,\n  onComplete: PropTypes.func.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}