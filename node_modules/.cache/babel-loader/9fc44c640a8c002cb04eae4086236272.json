{"ast":null,"code":"import isPostalCode from \"validator/lib/isPostalCode\";\nimport { stepMapping } from \"../constants\";\nconst from = stepMapping.from,\n      to = stepMapping.to,\n      weight = stepMapping.weight;\nexport function getshippingOption(option) {\n  return option === 1 ? \"Ground\" : \"Express\";\n}\nexport function getShippingRate(weight, shippingOption) {\n  const shippingRate = 0.4,\n        expressRate = 1.5,\n        shipWeight = parseFloat(weight),\n        option = parseFloat(shippingOption),\n        shippingCharge = option === 1 ? 1 : expressRate;\n  return (shipWeight * shippingRate * shippingCharge).toFixed(2);\n}\n\nfunction checkFromTo(obj) {\n  const errorObj = {};\n\n  if (!obj.name) {\n    errorObj.firstName = true;\n  }\n\n  if (!obj.street) {\n    errorObj.street = true;\n  }\n\n  if (!obj.city) {\n    errorObj.city = true;\n  }\n\n  if (obj.state.length !== 2) {\n    errorObj.state = true;\n  }\n\n  if (!isPostalCode(obj.zip, \"US\")) {\n    errorObj.zip = true;\n  }\n\n  return errorObj;\n}\n\nfunction checkWeight(val) {\n  const errorObj = {};\n\n  if (!parseInt(val, 10)) {\n    errorObj.weight = true;\n  }\n\n  return errorObj;\n}\n/* must be in same order as shipping object or we could do array loop but this is quicker */\n\n\nexport const validatorObj = {\n  [from]: checkFromTo,\n  [to]: checkFromTo,\n  [weight]: checkWeight\n};","map":{"version":3,"sources":["/Users/santhosh/shipping-label/src/core/components/utils.js"],"names":["isPostalCode","stepMapping","from","to","weight","getshippingOption","option","getShippingRate","shippingOption","shippingRate","expressRate","shipWeight","parseFloat","shippingCharge","toFixed","checkFromTo","obj","errorObj","name","firstName","street","city","state","length","zip","checkWeight","val","parseInt","validatorObj"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,4BAAzB;AACA,SAASC,WAAT,QAA4B,cAA5B;MACQC,I,GAAqBD,W,CAArBC,I;MAAMC,E,GAAeF,W,CAAfE,E;MAAIC,M,GAAWH,W,CAAXG,M;AAElB,OAAO,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;AACxC,SAAOA,MAAM,KAAK,CAAX,GAAe,QAAf,GAA0B,SAAjC;AACD;AAED,OAAO,SAASC,eAAT,CAAyBH,MAAzB,EAAiCI,cAAjC,EAAiD;AACtD,QAAMC,YAAY,GAAG,GAArB;AAAA,QACEC,WAAW,GAAG,GADhB;AAAA,QAEEC,UAAU,GAAGC,UAAU,CAACR,MAAD,CAFzB;AAAA,QAGEE,MAAM,GAAGM,UAAU,CAACJ,cAAD,CAHrB;AAAA,QAIEK,cAAc,GAAGP,MAAM,KAAK,CAAX,GAAe,CAAf,GAAmBI,WAJtC;AAKA,SAAO,CAACC,UAAU,GAAGF,YAAb,GAA4BI,cAA7B,EAA6CC,OAA7C,CAAqD,CAArD,CAAP;AACD;;AAED,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AACxB,QAAMC,QAAQ,GAAG,EAAjB;;AACA,MAAI,CAACD,GAAG,CAACE,IAAT,EAAe;AACbD,IAAAA,QAAQ,CAACE,SAAT,GAAqB,IAArB;AACD;;AACD,MAAI,CAACH,GAAG,CAACI,MAAT,EAAiB;AACfH,IAAAA,QAAQ,CAACG,MAAT,GAAkB,IAAlB;AACD;;AACD,MAAI,CAACJ,GAAG,CAACK,IAAT,EAAe;AACbJ,IAAAA,QAAQ,CAACI,IAAT,GAAgB,IAAhB;AACD;;AACD,MAAIL,GAAG,CAACM,KAAJ,CAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC1BN,IAAAA,QAAQ,CAACK,KAAT,GAAiB,IAAjB;AACD;;AACD,MAAI,CAACtB,YAAY,CAACgB,GAAG,CAACQ,GAAL,EAAU,IAAV,CAAjB,EAAkC;AAChCP,IAAAA,QAAQ,CAACO,GAAT,GAAe,IAAf;AACD;;AAED,SAAOP,QAAP;AACD;;AAED,SAASQ,WAAT,CAAqBC,GAArB,EAA0B;AACxB,QAAMT,QAAQ,GAAG,EAAjB;;AACA,MAAI,CAACU,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAb,EAAwB;AACtBT,IAAAA,QAAQ,CAACb,MAAT,GAAkB,IAAlB;AACD;;AACD,SAAOa,QAAP;AACD;AAED;;;AACA,OAAO,MAAMW,YAAY,GAAG;AAC1B,GAAC1B,IAAD,GAAQa,WADkB;AAE1B,GAACZ,EAAD,GAAMY,WAFoB;AAG1B,GAACX,MAAD,GAAUqB;AAHgB,CAArB","sourcesContent":["import isPostalCode from \"validator/lib/isPostalCode\";\nimport { stepMapping } from \"../constants\";\nconst { from, to, weight } = stepMapping;\n\nexport function getshippingOption(option) {\n  return option === 1 ? \"Ground\" : \"Express\";\n}\n\nexport function getShippingRate(weight, shippingOption) {\n  const shippingRate = 0.4,\n    expressRate = 1.5,\n    shipWeight = parseFloat(weight),\n    option = parseFloat(shippingOption),\n    shippingCharge = option === 1 ? 1 : expressRate;\n  return (shipWeight * shippingRate * shippingCharge).toFixed(2);\n}\n\nfunction checkFromTo(obj) {\n  const errorObj = {};\n  if (!obj.name) {\n    errorObj.firstName = true;\n  }\n  if (!obj.street) {\n    errorObj.street = true;\n  }\n  if (!obj.city) {\n    errorObj.city = true;\n  }\n  if (obj.state.length !== 2) {\n    errorObj.state = true;\n  }\n  if (!isPostalCode(obj.zip, \"US\")) {\n    errorObj.zip = true;\n  }\n\n  return errorObj;\n}\n\nfunction checkWeight(val) {\n  const errorObj = {};\n  if (!parseInt(val, 10)) {\n    errorObj.weight = true;\n  }\n  return errorObj;\n}\n\n/* must be in same order as shipping object or we could do array loop but this is quicker */\nexport const validatorObj = {\n  [from]: checkFromTo,\n  [to]: checkFromTo,\n  [weight]: checkWeight\n};\n"]},"metadata":{},"sourceType":"module"}